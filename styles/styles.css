/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

/************************************************************
                    Defaults
************************************************************/
.container{
    width:420px;
    margin:0 auto;
}

nav{
    border-top:2px solid #507ea8;
    border-bottom:2px solid #507ea8;
    background:#9fc3e3;
}

header{
    font-family: 'Iceberg', sans-serif;
    font-size:42px;
    background:url("../images/headerback.jpg") center bottom;
}

header img{
    height:120px;
}

a{
    text-decoration:none;
    color:#507ea8;
}

a:hover{
    color:white;
}

.instructions{
    border-top:2px solid #507ea8;
    border-bottom:2px solid #507ea8;
    padding:10px;
}

h3{
    font-size:18px;
    font-weight:bold;
}

footer{
    font-size:10px;
    background:#9fc3e3;
    padding:10px;
}

h4{
    font-size:1.4em;
}

/************************************************************
                    Game
************************************************************/
#game{
    width:420px;
    height:480px;
    position:relative;
    background-image:url("../images/mountainback.jpg");
}

#game img{
    width:60px;
    position:relative;
}

/************************************************************
                    Game Overlays
************************************************************/
.overlay{
	width:100%;
	height:50px;
	padding-top:10px;	
	position:fixed;
	top:25%;
	left:0;
	z-index:10;
	text-align:center;
	font-size:40px;
    font-family: 'vtksanimal2Regular';
}

.fail{	
	border-top:2px solid #600;
	border-bottom:2px solid #600;
	background:rgba(255,128,128,0.7);
	color:#300;
}

.success{
	border-top:2px solid #060;
	border-bottom:2px solid #060;
	background:rgba(128,255,128,0.7);
	color:#030;
}


/************************************************************
                    Class Styles
************************************************************/

nav ul {
    display: flex;

    /* flex container changes the order of the objects 
    default is row (horizontal) - row reverse is backwards horizontal
    column will stack vertically - column-reverse will stack backwards vertical */
    flex-direction:  row;

    /* align-items: center; */
    padding: 10px 0;

    /* justify content positions the content along the main axis (by default horizontally)
    the space between , space evenly , space around try to distribute the elements equally */
    /* justify-content: space-evenly; */

    /* height: 100px; */
    /* flexbox can position objects both horizontally and vertically   */
    
    /* align items positions the ocntent along the main axis (by default, vertically) */
    /* align-items: center; */
}

nav ul li {
    background: burlywood;
    /* flexgrow will let the items expand to fill up the space */
    flex-grow: 1;
    /* flex basis, set to 0  will tell the elements to ignore the content inside them */
    flex-basis:  0;
}

nav ul li a {
    /* by default , links (a tag )are inline, meaning you can't set a width 
    change them to block elements to set the width */
    display: block;
    text-align: center;
    height: 100%;
}

nav ul li a:hover {
    background-color: blue;
}
/* nth child targets the child elelment of a given number (starting at 1) */

nav ul li:nth-child(2) {
    /* the flex box property allows you to change the order of one element 
    the default order position is 0 
    higher numbers ocmel ater, lower (negative ) numbers come first*/
    order: 1;
}

/* grid area assigns this object to one part of the map we created */
h1 img{
    grid-area: penguin;
}

h1 span:nth-child(2) {
    grid-area: title1;
}

h1 span:nth-child(3) {
    grid-area: title2;
}

h1 {
    /* by default, grid sets up a single column grid with as many rows as necessary
    based on the elements inside this container */
    display: grid;
    /* grid template columns allows us to define columns in our grid the unit "fr" 
    stands for fraction , or one part of the availabele space repeat allows you to quickly setup a 
    grid where all the columns are the same*/

    grid-template-columns:repeat(5,1fr);
    /*  grid-template-areas allows you to creat e a map, then name parts of that map*/
    grid-template-areas: 
    "penguin title1 title1 title1 title1"
    "penguin title2 title2 title2 title2"
    ;
}


/* use amedia query to hide our testing block of code (will ) only apply when the screen
is 1px wide or less */
@media screen and (max-width: 1px)
{


    #game {
        display: grid;
        grid-template-columns: 1fr 2fr 1fr;
        grid-template-rows: 1fr 3fr 2fr;
        /* justify items positions objects horizontally in each grid space */
        justify-items: center;
    
        /* align items positions objects vertically in each grid space */
        align-items: end;
    }
    
    /* nth-of-type()looks for the third image no matter how many things are there in the parent */
    #game img:nth-of-type(3) {
        background-color: rgb(255, 255, 255);
        /* tell the object to be in a specific place in your grid */
        grid-row: 3;
        /*grid-column: 3; */
    }
    
    
    /* grid start and grid end can be used to tell an object to takew up a specific number of columns (start at column 2 and take up, or span , two columns)
    likeiwse with grid row start */
    #game img:nth-of-type(2)
    {
        background-color: aqua;
        grid-column-start:2;
        grid-column-end :span 2 ;
    
        /* we can control the alignment of an individual  grid items using: justify-self (horizontal) and align-self (vertically)*/
        justify-self: right;
        align-self: center;
    }

}
        /* the game needs 7 column grid to work */
        #game {
            display: grid;
            grid-template-columns: repeat (7 ,1fr);
        }    
         
        #game img:nth-of-type(1) {
            grid-row: 8;
            background-color: #507ea8;
        }
        #game img:nth-of-type(1) {grid-row: 8; grid-column: 1;}
        #game img:nth-of-type(2) {grid-row: 7; grid-column: 7;}
        #game img:nth-of-type(3) {grid-row: 6; grid-column: 2;}
        #game img:nth-of-type(4) {grid-row: 5; grid-column: 5;}
        #game img:nth-of-type(5) {grid-row: 4; grid-column: 4;}
        #game img:nth-of-type(6) {grid-row: 3; grid-column: 1;}
        #game img:nth-of-type(7) {grid-row: 2; grid-column: 6;}
        #game img:nth-of-type(8) {grid-row: 1; grid-column: 2;}
    
